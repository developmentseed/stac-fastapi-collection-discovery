[project]
name = "stac-fastapi-collection-discovery"
description = "A STAC API that aggregates collection search results from multiple STAC APIs."
readme = "README.md"
authors = [
    { name = "hrodmn", email = "henry@developmentseed.org" }
]
requires-python = ">=3.12"
dependencies = [
    "httpx>=0.28.1",
    "stac-fastapi-api>=6.0.0,<7.0",
    "stac-fastapi-extensions>=6.0.0,<7.0",
    "stac-fastapi-types>=6.0.0,<7.0",
]

dynamic = ["version"]

[project.optional-dependencies]
server = [
    "gunicorn>=23.0.0",
    "uvicorn>=0.35.0",
]
lambda = [
    "mangum>=0.19.0",
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm.build]
includes = ["src"]
excludes = ["tests/", "**/.mypy_cache", "**/.DS_Store"]

[dependency-groups]
dev = [
    "mypy>=1.17.0",
    "pytest>=8.4.1",
    "ruff>=0.13.0",
    "uvicorn>=0.35.0",
    "pytest-asyncio>=0.23.0",
    "pytest-recording>=0.13.0",
    "respx>=0.21.0",
    "httpx>=0.28.1",
    "pre-commit>=4.2.0",
]
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-jupyter>=0.25.1",
    "mkdocs-material>=9.6.20",
    "markdown-callouts>=0.4.0",
    "mike>=2.1.3",
]

[tool.pdm.version]
source = "scm"
fallback_version = "0.1.0"

[tool.mypy]
ignore_missing_imports = true
namespace_packages = true
explicit_package_bases = true
exclude = ["tests", ".venv"]

[tool.ruff]
line-length = 90

[tool.ruff.lint]
select = [
        "C",
        "E",
        "F",
        "W",
        "B",
]

[tool.ruff.lint.isort]
known-first-party = ["stac_fastapi.collection_discovery"]

[tool.pytest.ini_options]
addopts = [
    "-v",
    "--block-network"
]
asyncio_mode = "auto"

