[project]
name = "stac-fastapi-collection-discovery"
version = "0.1.0"
description = "A STAC API that aggregates collection search results from multiple STAC APIs into a single unified interface."
readme = "README.md"
authors = [
    { name = "hrodmn", email = "henry.rodman@gmail.com" }
]
requires-python = ">=3.13"
dependencies = [
    "httpx>=0.28.1",
    "stac-fastapi-api>=6.0.0",
    "stac-fastapi-extensions>=6.0.0",
    "stac-fastapi-types>=6.0.0",
]

[project.optional-dependencies]
server = [
    "gunicorn>=23.0.0",
    "uvicorn>=0.35.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/stac_fastapi"]

[dependency-groups]
dev = [
    "mypy>=1.17.0",
    "pytest>=8.4.1",
    "ruff>=0.12.3",
    "uvicorn>=0.35.0",
    "pytest-asyncio>=0.23.0",
    "pytest-recording>=0.13.0",
    "respx>=0.21.0",
    "httpx>=0.28.1",
    "pre-commit>=4.2.0",
]

[tool.mypy]
ignore_missing_imports = true
namespace_packages = true
explicit_package_bases = true
exclude = ["tests", ".venv"]

[tool.ruff]
line-length = 90

[tool.ruff.lint]
select = [
        "C",
        "E",
        "F",
        "W",
        "B",
]

[tool.ruff.lint.isort]
known-first-party = ["stac_fastapi.collection_discovery"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings"
]
markers = [
    "unit: Unit tests with mocked dependencies",
    "integration: Integration tests with real APIs",
    "vcr: Tests that use pytest-recording for HTTP interactions"
]
asyncio_mode = "auto"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]

